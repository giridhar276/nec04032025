C - datatypes
---
int
float
char
double
long
short


python - objects
-------

number
------
number can be integer or decimal or hexa or octal.

val = 10
aval = 34.34


string
------
string is defined in single or double or triple quotes.

aname = 'python'
bname = "unix shell scripting"
cname = """large language models"""


list ( array in C)
------------------
list contains set of elements.
Elements can be numbers or strings or any combination.

alist = [10,20,30,40]
blist = ["unix","java","oracle"]
clist = [[10,20],[30,40]]


tuple ( immutable  unchangeable  uneditable)
------
tuple contains  set of elements.
Elements can be numbers or strings or any combination.
** Elements inside tuple cannot be modified directly ***

atup = (10,20,30)
btup = ("java","oracle")


dictionary ( hashmap   hash    associatearray   json)
-----------
dictionary contains key:value pairs.
dictionary is defined in {}.
key can be number or string to identify the value.
value can be number,string,list,tuple,dictionary or any complex datastructure

syntax:  object = { key:value , key:value , key:value }
example:   book = {"chap1:10 ,"chap2":20 ,"chap3":30 }
         bookinfo= {"chap1:[10,"india"] ,"chap2"[20,"UK"] }
        numbers  = {1:2,3:4}
          
set
----
set is UNORDERED collection of UNIQUE elements of SAME type.

aset = {10,10,20,30,30}


conditional statements
--------------------
if 
if-else 
if-elif-elif-elif-else 


level1
level1
level1
if cond:
    level2
    level2
    level2
level1
level1
if cond:
    level2
level1

file handling
--------------

txt
csv
docx
xlsx
jpg
png
pdf
mp3
mp4
mpeg
odc
pptx
zip
rar
tar.gz
7z
dat
log
json
xml
env


#include<stdio.h>
#include<conio.h>
#include<math.h>
#include<graphics.h>
#include<datetime.h>
#include<time.h>
#include<stdmanip.h>
#include<string.h>


working with flat files ( txt csv  conf  log json ...)




working with third party files ( xlsx zip  7z  pptx  docx pdf )
library called openpyxl for excel files
library docx to work with word documents.


working with flat files ( txt csv  conf  log json ...)
-------------------------------------------------
r - read mode 
w - write mode
a - append mode


opening the file
----------------
syntax:  object = open(filename,mode)
example:   fobj = open("customers.txt","r")

closing the file
----------------
fobj.close()

read operation
------------------
1. reading the file line by line
2. fobj.readlines()
3. fobj.read()
4. using csv library
5. using pandas library ( much suited for data analytics)



exception handling
-----------------
Basically we have 2 types of errors.

1. syntax error
2. semantic error or runtime error or logical error

Handling the errors that occurs during the runtime is known as exception handling.

try
except
else
finally


function | block | definition | subroutine
-------------------------------------------
-some lines of code written separately for the resusability purpose.
-write the function once and call it for multiple times.

There are 2 types of functions


1. builtin functions
2. user defined functions


user defined functions
---------------------------

ways of passing arguments
- fixed arguments
- default arguments
- variable length arguments


linux                  python
-----------          --------------
rm -rf filename         os.remove(filename)
                        os.unlink(filename)


whoami                   os.getlogin

cpuutlization/           psutil.cpu_percent()
memoryutliztin 

cp source des            shutil.copy(s,d)





task/requirement = core python            + python library/framework   + domain expertise
         (procedural or object oriented)



analytics
---------------